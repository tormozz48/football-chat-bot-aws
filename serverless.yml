org: tormozz48
app: football-chat-bot-aws
service: football-chat-bot-aws
frameworkVersion: '3'

custom:
  tableName: 'events-table-${sls:stage}'

provider:
  name: aws
  runtime: nodejs14.x
  environment:
    EVENTS_TABLE: ${self:custom.tableName}
    TELEGRAM_BOT_TOKEN: ${param:telegramBotToken}
    TELEGRAM_BOT_WEBHOOK_URL: ${param:telegramBotWebhookUrl}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ EventsTable, Arn ]

plugins:
  - serverless-dynamodb-local
  - serverless-plugin-typescript
  - serverless-offline

functions:
  ping:
    handler: src/lambda/ping.handler
    events:
      - httpApi:
          path: /ping
          method: get
  telegram:
    handler: src/lambda/telegram.handler
    events:
      - httpApi:
          path: /telegram
          method: post
  eventAdd:
    handler: src/lambda/actions/event-add.action.eventAdd
  eventInfo:
    handler: src/lambda/actions/event-info.action.eventInfo
  eventRemove:
    handler: src/lambda/actions/event-remove.action.eventRemove
  memberAdd:
    handler: src/lambda/actions/member-add.action.memberAdd
  memberRemove:
    handler: src/lambda/actions/member-remove.action.memberRemove

resources:
  Resources:
    EventsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: chatId
            AttributeType: N
          -
            AttributeName: date
            AttributeType: S
        KeySchema:
          -
            AttributeName: chatId
            KeyType: HASH
          -
            AttributeName: date
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}