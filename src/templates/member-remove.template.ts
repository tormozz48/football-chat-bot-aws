import { ActionResult, ActionResults, Actions, ActionStatuses, Member } from '../types';
import { Template } from './types';
import { Event } from '../database/types';

const memberNotFound: Template<Actions.memberRemove, ActionStatuses.memberNotFound> = {
  action: Actions.memberRemove,
  status: ActionStatuses.memberNotFound,
  bundle: {
    en: ['üö∑ Member <strong>{{name}}</strong> was not found üö∑'],
    ru: ['üö∑ –£—á–∞—Å—Ç–Ω–∏–∫ <strong>{{name}}</strong> –Ω–µ –Ω–∞–π–¥–µ–Ω üö∑'],
  },
};

const success: Template<Actions.memberRemove, ActionStatuses.success> = {
  action: Actions.memberRemove,
  status: ActionStatuses.success,
  beforeApply: (data: ActionResults[Actions.memberRemove]) => {
    const { body } = data as ActionResults[Actions.memberRemove]['body'] as ActionResult<
      ActionStatuses.success,
      Event & Member
    >;

    return {
      name: body.name,
      eventDate: body.eventDate,
      members: body.members.map(({ name }, index) => ({ index: index + 1, name })),
      total: body.members.length,
    };
  },
  bundle: {
    en: [
      '‚ùå <strong>{{name}}</strong> canceled his participation ‚ùå',
      '',
      '‚ÑπÔ∏è List of members:',
      '{{#each members}}',
      '{{index}}: <i>{{name}}</i>',
      '{{/each}}',
      '',
      'Total: <strong>{{total}}</strong>',
    ],
    ru: [
      '‚ùå <strong>{{name}}</strong> –æ—Ç–º–µ–Ω–∏–ª —Å–≤–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ —Å–æ–±—ã—Ç–∏–∏ ‚ùå',
      '',
      '‚ÑπÔ∏è –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:',
      '{{#each members}}',
      '{{index}}: <i>{{name}}</i>',
      '{{/each}}',
      '',
      '–ò—Ç–æ–≥–æ: <strong>{{total}}</strong>',
    ],
  },
};

export const templates = [memberNotFound, success];
